% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-baseline.R
\name{baseline_const}
\alias{baseline_const}
\alias{baseline_mean}
\alias{baseline_mean_c}
\alias{baseline_mean_d}
\alias{baseline}
\alias{baseline_c}
\alias{baseline_d}
\title{Baseline cognitive models}
\usage{
baseline_const(formula, data = NULL, const, mode, ...)

baseline_mean(formula, data = NULL, mode, ...)

baseline_mean_c(formula, data = NULL, ...)

baseline_mean_d(formula, data = NULL, ...)

baseline(formula, data = NULL, type, const, mode, ...)

baseline_c(formula, data = NULL, type, const, ...)

baseline_d(formula, data = NULL, type, const, ...)
}
\arguments{
\item{formula}{A formula specifying the observed variable as left hand (e.g., \code{y ~ .}). Note the "\code{~}" and "\code{.}", please.}

\item{const}{(optional, \bold{required} if \code{type = "constant"}) A number with the prediction of the model, must be a probability.}

\item{type}{A string, can be \code{"constant", "mean"} specifying the type of baseline model (see details).}
}
\description{
\code{baseline()} makes simple stimulus-agnostic models, \code{baseline_const()} predicts a fixed value, \code{baseline_mean()} predicts the mean observed value.
}
\details{
Baseline models are very simple models that ignore the stimuli. Baseline models are used as sanity checks in cognitive model comparisons. Other cognitive models should beat the baseline model -- if not, the other cognitive models do not describe the observed data well.

The \bold{\code{type = "constant"}} or \code{baseline_const()} predicts the fixed value \code{const} for all trials. A common baseline in binary choice tasks is \emph{Pr=0.50}, for which we would use \code{const = 0.50}. The shorthand \code{baseline_const()} calls \code{baseline()} with \code{type = "constant"}.

The \bold{\code{type = "mean"}} or \code{baseline_mean()} predicts a fixed value, namely the mean of the observed responses, for all trials. It thus has one free parameter. It calls \code{baseline()} with \code{type = "mean"}.
}
\section{Important}{

\emph{Note}, \bold{these models are only implemented for discrete responses}.
}

\examples{
# Make some fake data
D <- data.frame(y = c(1,1,0), x = c(1,2,3))

M <- baseline_const(y~., D, const = 0.5) # Constant Pr = 0.5
predict(M)                               # predicts 0.5, 0.5, 0.5
M$predict()                              # -- " --
M$npar()                                 # 0 parameter
M$logLik()                               # log likelihood (binomial)

M <- baseline_mean(y~., D)               # Pr = mean(observed variable)
predict(M)                               # predicts 2/3, 2/3, 2/3
M$predict()                              # -- " --
M$npar()                                 # 1 free parameter

}
\concept{Cognitive models}
