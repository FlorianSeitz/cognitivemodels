% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{make_parspace}
\alias{make_parspace}
\title{Define parameter for cognitive models}
\usage{
makeParspace(...)
}
\arguments{
\item{...}{Parameters and their ranges, e.g., \code{makeParspace(theta = c(ul=-1, ll=1, init=0, na=0), gamma = c(0,2,1,NA))}. See details and examples.#' 
The general schema per parameter is a named vector \code{parametername = c(ul = #, ll = #, init = #, na = #)}
\describe{
   \item{\code{"ll"}}{Lower limit, smallest allowed value}
   \item{\code{"ul"}}{Upper limit, highest allowed value}
   \item{\code{"init"} (optional)}{Initial value for fitting}
   \item{\code{"na"} (optional)}{Value the parameter takes if it should have no effect, can be \code{NA}}
}}
}
\value{
A matrix with as many rows as parameters, where rownames are paramter names and four columns ll, ul, init, na define the lower limit, upper limit, initial value and null-effect-value (optional) for each parameter.
}
\description{
Define parameter for cognitive models
}
\details{
\code{"ll"} and \code{"ul"} are the smallest and largest value allowed for the parameter, \code{"init"} is the initial value when fitting the parameter, \code{"na"} is an optional value the parameter takes if it should have no effect.

To define a parameter \eqn{\alpha} with \eqn{0 \le \alpha \le 1} use one argument, \code{alpha = c(0,1)}. To define an additional parameter \eqn{\beta} with \eqn{2 \le \beta \le 9} use two arguments, \code{alpha = c(0,1), beta = c(2,9)}, and so forth. You can specify an initial value for the parameter used in fitting as third element of vectors.
}
\examples{
## Define a parameter 'p' that can range from 0-1
makeParspace(p = c(0,1))
makeparspapce(p = c(ll=0, ul=2)) # the same

# Note:
# Initial value will be the mean of 0 and 1.


## Define a parameter 'zeta' from 0-5
## and set the initial value to 2
makeParspace(zeta = c(ll=0, ul=5, init=2))
makeParspace(zeta = c(0,5,2)) # the same
makeParspace(zeta = c(ul=5,ll=0,init=2)) #the same


## Define one parameter 'expon' from 0-2 with initial value 0.5
## and a value of 1 making it have no effect
makeParspace(expon = c(0,2,1,1))
makeParspace(expon = c(ll=0,ul=2,init=1,na=1)) #the same


## Define four parameter alpha, beta, gamma, delta
makeParspace(alpha = c(ll=0,ul=1,init=0.5,na=0),
                beta = c(1,10,5,NA),
                gamma = c(ll=1,ul=2,init=0,na=1),
                delta = c(1,2,0))


## Dynamically define new parameter "gamma" and "delta"
## with the same definition (ul, ll, init, na)
def <- c(ll = 0, ul = 1, init = 0.5, na = 0)
deflist <- list("gamma" = def, "delta" = def)
do.call(makeParspace, deflist)
}
