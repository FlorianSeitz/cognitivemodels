% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpt.R
\name{cpt}
\alias{cpt}
\title{Kahneman & Tversky's (1992) cumulative prospect theory model}
\usage{
cpt(formula, nopt, nout, ref, fixed = list(), data, choicerule,
  weighting = c("TK1992"), value = c("TK1992"))
}
\arguments{
\item{formula}{Object of class formula, for instance \code{response ~ x1 + x2 + px + I(1-px) | y1 + y2 + py + I(1-py)}, defines the response, outcome, and probability variables; choice options must be separated by a pipe (\code{|}).}

\item{nopt}{Integer spedifying the number of options.}

\item{nout}{Integer specifying the number of outcomes.}

\item{ref}{Integer or numeric vector, reference point.}

\item{fixed}{(optional) Named vector with model parameter(s) that are predefined (will not be fitted). If a fixed parameter is \code{NULL} model parameter will be ignored. See details.}

\item{data}{Data.frame or matrix, must contain all variables in \code{formula}.}

\item{choicerule}{(optional) choierule, for instance \code{"softmax"}, allowed values are listed in \code{type} under \code{\link[cogsciutils]{choicerule}}.}

\item{weighting}{(optional) weighting function. Currently the one used in Kahneman & Tversky (1992), \code{"KT1992"}, is possible.}

\item{value}{(optional) value function. Currently, only the one used by Kahneman & Tversky (1992), \code{"KT1992"}, is possible.}
}
\value{
An object of class R6 holding the model, it has free parameters. A model object \code{M} can be viewed with \code{M}, predictions can be made with \code{M$predict()} for choice predictions, and \code{M$predict("ev")} for the expected value of the optimal choice and \code{M$predict("value", 1:2)} for the expected value of all choices.
}
\description{
Fits the cumulative prospect theory model.
}
\details{
Risk-sensitive foraging means you have, for instance, four choices between the same two risky lotteries and after the four choices you need to have accumulated at least 12 points to get a reward. The optimal solution to this choice problem relies on dynamic programming. The function creates all possible future states given the possible remaining trials, and predicts the optimal choice polica or the expected value of chosing either option given a certain state and a certain time horizon.
}
\examples{
dt <- data.frame(
  x1 = c(100, -100),
  px = 1,
  x2 = 0,
  y1 = c(200, -200),
  py = c(.71,.64),
  y2 = 0,
  rp = 1)

# Make the model, add fixed parameters (don't fit)
M <- cpt(rp ~ x1 + x2 + px + I(1-px) | y1 + y2 + py + I(1-py),
         nopt = 2, nout = 2, ref = 0, choicerule = "softmax", data = dt,
         fixed = list(alpha = 0.88, beta = 0.88, lambda = 2.25,
         gammap = 0.61, gamman = 0.69, tau = 1))
# View the model
M
M$predict("value") # predict values
M$predict("response") # predict choices after soft-max
}
\references{
Tversky, A., & Kahneman, D. (1992). Advances in prospect theory: cumulative representation of uncertainty. Journal of Risk and Uncertainty, 5, 297â€“323. doi:10.1007/BF00122574
}
\author{
Jana B. Jarecki, \email{jj@janajarecki.com}
}
